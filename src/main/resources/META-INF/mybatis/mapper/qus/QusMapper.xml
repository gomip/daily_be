<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.springbase.repo.mybatis.qus.QusMapper">
    <!-- ===========================================================================================
         조회
    ============================================================================================ -->
    <select id="selectQusPaging" resultType="GetQusOut">
        select /* selectQusPaging @ qus @ 문제 목록 조회 */
               qus_id
             , qus_title
             , qus_ctn
             , dif_cd
             , daily.getcdname('DIF_CD', dif_cd) as "difCdName"
             , tag_cd
             , daily.getcdname('TAG_CD', tag_cd) as "tagCdName"
             , use_yn
             , daily.getusername(create_user_id) as "createUserName"
             , update_dt
             , daily.getusername(update_user_id) as "updateUserName"
             , update_dt
          from daily.qus_qus_mst
         where 1=1
         <if test="difCdList != null and difCdList.size != 0">
             and dif_cd in
                <foreach collection="difCdList" item="item" open="(" close=")" separator=",">
                    #{item}
                </foreach>
         </if>
        <if test="tagCdList != null and tagCdList.size != 0">
            and tag_cd in
            <foreach collection="tagCdList" item="item" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>
         order by qus_id
    </select>

    <select id="selectQusOne" resultType="GetQusOut">
        select /* selectQusOne @ qus @ 문제 단건 조회 */
               qus_id
             , qus_title
             , qus_ctn
             , dif_cd
             , daily.getcdname('DIF_CD', dif_cd) as "difCdName"
             , tag_cd
             , daily.getcdname('TAG_CD', tag_cd) as "tagCdName"
             , use_yn
             , daily.getusername(create_user_id) as "createUserName"
             , update_dt
             , daily.getusername(update_user_id) as "updateUserName"
             , update_dt
          from daily.qus_qus_mst
         where 1=1
           and qus_id = #{qusId}
    </select>

    <select id="isExistQus" resultType="boolean">
        select /* isExistQus @ qus @ 문제 존재여부 확인 */
            case when count(1) > 0 then true
                 else false end as isExist
          from daily.qus_qus_mst
         where 1=1
           and use_yn = 'Y'
           and qus_id = #{qusId}
         limit 1
    </select>

    <select id="selectSolOne" resultType="GetSolOut">
        select /* selectSolOne @ qus @ 정답 단건 조회 */
               sol_id
             , lang_cd
             , daily.getcdname('LANG_CD', lang_cd) as "langCdName"
             , sol_ctn
             , daily.getusername(create_user_id) as "createUserName"
             , update_dt
             , daily.getusername(update_user_id) as "updateUserName"
             , update_dt
          from daily.qus_sol_mst
         where 1=1
           and sol_id = #{solId}
    </select>

    <select id="selectSolAll" resultType="GetSolOut">
        select /* selectSolAll @ qus @ 정답 조회 */
               a.sol_id
             , a.lang_cd
             , daily.getcdname('LANG_CD', a.lang_cd) as "lang_cd_name"
             , a.sol_ctn
             , daily.getusername(a.create_user_id) as "createUserName"
             , a.update_dt
             , daily.getusername(a.update_user_id) as "updateUserName"
             , a.update_dt
          from daily.qus_sol_mst a
             , daily.qus_qus_sol_rel b
             , daily.qus_qus_mst c
         where 1=1
           and a.sol_id = b.sol_id
           and b.qus_id = c.qus_id
           and c.qus_id = #{qusId}
    </select>
    <!-- ===========================================================================================
         등록
    ============================================================================================ -->
    <select id="insertQus" resultType="string">
        insert /* insertQus @ qus @ 문제 등록 */
          into daily.qus_qus_mst
              (
               qus_title,
               dif_cd,
               qus_ctn,
               tag_cd,
               create_user_id,
               create_dt,
               use_yn
               )
         values (
                 #{qusTitle},
                 #{difCd},
                 #{qusCtn},
                 #{tagCd},
                 #{createUserId},
                 #{createDt},
                 'Y'
                )
                returning qus_id
    </select>

    <select id="insertSol" resultType="string">
        insert /* insertSol @ qus @ 정답 등록 */
          into daily.qus_sol_mst(
                                 lang_cd,
                                 sol_ctn,
                                 create_user_id,
                                 create_dt
                                 )
        values (
                #{langCd},
                #{solCtn},
                #{createUserId},
                #{createDt}
               )
               returning sol_id
    </select>

    <insert id="insertQusSolRel">
        insert /* insertQusSolRel @ qus @ 문제 정답 관계 등록 */
          into daily.qus_qus_sol_rel(
                                     qus_id,
                                     sol_id,
                                     create_user_id,
                                     create_dt
                                     )
        values (
                #{qusId},
                #{solId},
                #{userId},
                #{createDt}
               )
    </insert>
</mapper>